<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MaintenanceDataSet" targetNamespace="http://tempuri.org/MaintenanceDataSet.xsd" xmlns:mstns="http://tempuri.org/MaintenanceDataSet.xsd" xmlns="http://tempuri.org/MaintenanceDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="MaintenanceConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MaintenanceConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.FinalProject.My.MySettings.GlobalReference.Default.MaintenanceConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TasksTableAdapter" GeneratorDataComponentClassName="TasksTableAdapter" Name="Tasks" UserDataComponentName="TasksTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MaintenanceConnectionString (MySettings)" DbObjectName="dbo.Tasks" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Tasks] WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name) AND ([TypeID] = @Original_TypeID) AND ((@IsNull_Recurrence = 1 AND [Recurrence] IS NULL) OR ([Recurrence] = @Original_Recurrence)) AND ((@IsNull_RecurrenceUnit = 1 AND [RecurrenceUnit] IS NULL) OR ([RecurrenceUnit] = @Original_RecurrenceUnit)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Recurrence" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Recurrence" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Recurrence" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Recurrence" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_RecurrenceUnit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RecurrenceUnit" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_RecurrenceUnit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="RecurrenceUnit" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Tasks] ([Name], [TypeID], [Recurrence], [RecurrenceUnit]) VALUES (@Name, @TypeID, @Recurrence, @RecurrenceUnit);
SELECT Id, Name, TypeID, Recurrence, RecurrenceUnit FROM Tasks WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Recurrence" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Recurrence" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@RecurrenceUnit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="RecurrenceUnit" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, TypeID, Recurrence, RecurrenceUnit FROM dbo.Tasks</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Tasks] SET [Name] = @Name, [TypeID] = @TypeID, [Recurrence] = @Recurrence, [RecurrenceUnit] = @RecurrenceUnit WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name) AND ([TypeID] = @Original_TypeID) AND ((@IsNull_Recurrence = 1 AND [Recurrence] IS NULL) OR ([Recurrence] = @Original_Recurrence)) AND ((@IsNull_RecurrenceUnit = 1 AND [RecurrenceUnit] IS NULL) OR ([RecurrenceUnit] = @Original_RecurrenceUnit)));
SELECT Id, Name, TypeID, Recurrence, RecurrenceUnit FROM Tasks WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Recurrence" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Recurrence" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@RecurrenceUnit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="RecurrenceUnit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Recurrence" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Recurrence" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Recurrence" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Recurrence" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_RecurrenceUnit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RecurrenceUnit" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_RecurrenceUnit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="RecurrenceUnit" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[D:\SCHOOL\IST 203 (ADVANCED VB)\FINALPROJECT\MAINTENANCE.MDF].dbo.Tasks" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="TypeID" DataSetColumn="TypeID" />
              <Mapping SourceColumn="Recurrence" DataSetColumn="Recurrence" />
              <Mapping SourceColumn="RecurrenceUnit" DataSetColumn="RecurrenceUnit" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MaintenanceConnectionString (MySettings)" DbObjectName="dbo.Tasks" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByID" GetMethodModifier="Public" GetMethodName="GetDataByID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByID" UserSourceName="GetDataByID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Id, Name, TypeID, Recurrence, RecurrenceUnit FROM dbo.Tasks WHERE ID=@ID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="Id" DataSourceName="[D:\SCHOOL\IST 203 (ADVANCED VB)\FINALPROJECT\MAINTENANCE.MDF].dbo.Tasks" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TaskScheduleTableAdapter" GeneratorDataComponentClassName="TaskScheduleTableAdapter" Name="TaskSchedule" UserDataComponentName="TaskScheduleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MaintenanceConnectionString (MySettings)" DbObjectName="dbo.TaskSchedule" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM TaskSchedule
WHERE        (Id = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="Id" DataSourceName="[D:\SCHOOL\IST 203 (ADVANCED VB)\FINALPROJECT\MAINTENANCE.MDF].dbo.TaskSchedule" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TaskSchedule] ([TaskID], [DueDate], [CompleteDate]) VALUES (@TaskID, @DueDate, @CompleteDate);
SELECT Id, TaskID, DueDate, CompleteDate FROM TaskSchedule WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TaskID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TaskID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@DueDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="DueDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@CompleteDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CompleteDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, TaskID, DueDate, CompleteDate FROM dbo.TaskSchedule</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       TaskSchedule
SET                TaskID = @TaskID, DueDate = @DueDate, CompleteDate = @CompleteDate
WHERE        (Id = @ID);   
SELECT Id, TaskID, DueDate, CompleteDate FROM TaskSchedule WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="TaskID" ColumnName="TaskID" DataSourceName="[D:\SCHOOL\IST 203 (ADVANCED VB)\FINALPROJECT\MAINTENANCE.MDF].dbo.TaskSchedule" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TaskID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TaskID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DueDate" ColumnName="DueDate" DataSourceName="[D:\SCHOOL\IST 203 (ADVANCED VB)\FINALPROJECT\MAINTENANCE.MDF].dbo.TaskSchedule" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@DueDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="DueDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="CompleteDate" ColumnName="CompleteDate" DataSourceName="[D:\SCHOOL\IST 203 (ADVANCED VB)\FINALPROJECT\MAINTENANCE.MDF].dbo.TaskSchedule" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@CompleteDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="CompleteDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="Id" DataSourceName="[D:\SCHOOL\IST 203 (ADVANCED VB)\FINALPROJECT\MAINTENANCE.MDF].dbo.TaskSchedule" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="TaskID" DataSetColumn="TaskID" />
              <Mapping SourceColumn="DueDate" DataSetColumn="DueDate" />
              <Mapping SourceColumn="CompleteDate" DataSetColumn="CompleteDate" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MaintenanceConnectionString (MySettings)" DbObjectName="dbo.TaskSchedule" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByIncomplete" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByIncomplete" GeneratorSourceName="FillByIncomplete" GetMethodModifier="Public" GetMethodName="GetDataByIncomplete" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByIncomplete" UserSourceName="FillByIncomplete">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Id, TaskID, DueDate, CompleteDate FROM dbo.TaskSchedule where completedate is null</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MaintenanceConnectionString (MySettings)" DbObjectName="dbo.TaskSchedule" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByID" GetMethodModifier="Public" GetMethodName="GetDataByID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByID" UserSourceName="GetDataByID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Id, TaskID, DueDate, CompleteDate FROM dbo.TaskSchedule WHERE ID = @ID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="Id" DataSourceName="[D:\SCHOOL\IST 203 (ADVANCED VB)\FINALPROJECT\MAINTENANCE.MDF].dbo.TaskSchedule" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TaskTypesTableAdapter" GeneratorDataComponentClassName="TaskTypesTableAdapter" Name="TaskTypes" UserDataComponentName="TaskTypesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MaintenanceConnectionString (MySettings)" DbObjectName="dbo.TaskTypes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TaskTypes] WHERE (([Id] = @Original_Id) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TaskTypes] ([Name]) VALUES (@Name);
SELECT Id, Name FROM TaskTypes WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name FROM dbo.TaskTypes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TaskTypes] SET [Name] = @Name WHERE (([Id] = @Original_Id) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)));
SELECT Id, Name FROM TaskTypes WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[D:\SCHOOL\IST 203 (ADVANCED VB)\FINALPROJECT\MAINTENANCE.MDF].dbo.TaskTypes" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="MaintenanceDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="MaintenanceDataSet" msprop:Generator_UserDSName="MaintenanceDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Tasks" msprop:Generator_TableClassName="TasksDataTable" msprop:Generator_TableVarName="tableTasks" msprop:Generator_TablePropName="Tasks" msprop:Generator_RowDeletingName="TasksRowDeleting" msprop:Generator_RowChangingName="TasksRowChanging" msprop:Generator_RowEvHandlerName="TasksRowChangeEventHandler" msprop:Generator_RowDeletedName="TasksRowDeleted" msprop:Generator_UserTableName="Tasks" msprop:Generator_RowChangedName="TasksRowChanged" msprop:Generator_RowEvArgName="TasksRowChangeEvent" msprop:Generator_RowClassName="TasksRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TypeID" msprop:Generator_ColumnVarNameInTable="columnTypeID" msprop:Generator_ColumnPropNameInRow="TypeID" msprop:Generator_ColumnPropNameInTable="TypeIDColumn" msprop:Generator_UserColumnName="TypeID" type="xs:int" />
              <xs:element name="Recurrence" msprop:Generator_ColumnVarNameInTable="columnRecurrence" msprop:Generator_ColumnPropNameInRow="Recurrence" msprop:Generator_ColumnPropNameInTable="RecurrenceColumn" msprop:Generator_UserColumnName="Recurrence" type="xs:int" minOccurs="0" />
              <xs:element name="RecurrenceUnit" msprop:Generator_ColumnVarNameInTable="columnRecurrenceUnit" msprop:Generator_ColumnPropNameInRow="RecurrenceUnit" msprop:Generator_ColumnPropNameInTable="RecurrenceUnitColumn" msprop:Generator_UserColumnName="RecurrenceUnit" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TaskSchedule" msprop:Generator_TableClassName="TaskScheduleDataTable" msprop:Generator_TableVarName="tableTaskSchedule" msprop:Generator_TablePropName="TaskSchedule" msprop:Generator_RowDeletingName="TaskScheduleRowDeleting" msprop:Generator_RowChangingName="TaskScheduleRowChanging" msprop:Generator_RowEvHandlerName="TaskScheduleRowChangeEventHandler" msprop:Generator_RowDeletedName="TaskScheduleRowDeleted" msprop:Generator_UserTableName="TaskSchedule" msprop:Generator_RowChangedName="TaskScheduleRowChanged" msprop:Generator_RowEvArgName="TaskScheduleRowChangeEvent" msprop:Generator_RowClassName="TaskScheduleRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="TaskID" msprop:Generator_ColumnVarNameInTable="columnTaskID" msprop:Generator_ColumnPropNameInRow="TaskID" msprop:Generator_ColumnPropNameInTable="TaskIDColumn" msprop:Generator_UserColumnName="TaskID" type="xs:int" />
              <xs:element name="DueDate" msprop:Generator_ColumnVarNameInTable="columnDueDate" msprop:Generator_ColumnPropNameInRow="DueDate" msprop:Generator_ColumnPropNameInTable="DueDateColumn" msprop:Generator_UserColumnName="DueDate" type="xs:dateTime" />
              <xs:element name="CompleteDate" msprop:Generator_ColumnVarNameInTable="columnCompleteDate" msprop:Generator_ColumnPropNameInRow="CompleteDate" msprop:Generator_ColumnPropNameInTable="CompleteDateColumn" msprop:Generator_UserColumnName="CompleteDate" type="xs:dateTime" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TaskTypes" msprop:Generator_TableClassName="TaskTypesDataTable" msprop:Generator_TableVarName="tableTaskTypes" msprop:Generator_TablePropName="TaskTypes" msprop:Generator_RowDeletingName="TaskTypesRowDeleting" msprop:Generator_RowChangingName="TaskTypesRowChanging" msprop:Generator_RowEvHandlerName="TaskTypesRowChangeEventHandler" msprop:Generator_RowDeletedName="TaskTypesRowDeleted" msprop:Generator_UserTableName="TaskTypes" msprop:Generator_RowChangedName="TaskTypesRowChanged" msprop:Generator_RowEvArgName="TaskTypesRowChangeEvent" msprop:Generator_RowClassName="TaskTypesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Tasks" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="TaskSchedule_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TaskSchedule" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="TaskTypes_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TaskTypes" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Tasks_TaskTypes" msdata:parent="TaskTypes" msdata:child="Tasks" msdata:parentkey="Id" msdata:childkey="TypeID" msprop:Generator_UserChildTable="Tasks" msprop:Generator_ChildPropName="GetTasksRows" msprop:Generator_UserRelationName="FK_Tasks_TaskTypes" msprop:Generator_RelationVarName="relationFK_Tasks_TaskTypes" msprop:Generator_UserParentTable="TaskTypes" msprop:Generator_ParentPropName="TaskTypesRow" />
      <msdata:Relationship name="FK_TaskSchedule_Tasks" msdata:parent="Tasks" msdata:child="TaskSchedule" msdata:parentkey="Id" msdata:childkey="TaskID" msprop:Generator_UserChildTable="TaskSchedule" msprop:Generator_ChildPropName="GetTaskScheduleRows" msprop:Generator_UserRelationName="FK_TaskSchedule_Tasks" msprop:Generator_ParentPropName="TasksRow" msprop:Generator_RelationVarName="relationFK_TaskSchedule_Tasks" msprop:Generator_UserParentTable="Tasks" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>